/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.13 clickbox001blend.gltf --transform 
Files: clickbox001blend.gltf [5.37KB] > clickbox001blend-transformed.glb [1.2KB] (78%)
*/

import { useEffect, useRef, useState } from "react";
import { motion as threeMotion } from "framer-motion-3d";
import { useGLTF } from "@react-three/drei";
import { useFrame } from "@react-three/fiber";
import useChangeCube from "@/hooks/useChangeCube";
import BoxUI from "./BoxUI";
export function Clickbox(props) {
  const { nodes, materials } = useGLTF(
    "models/clickbox/clickbox001blend-transformed.glb",
  );
  const clickBox = useRef();
  const [rotationAngle, setRotationAngle] = useState(0);
  const startRotation = (dir) => {
    setRotationAngle((prevAngle) => {
      const newAngle = prevAngle + (Math.PI / 2) * dir;
      return newAngle;
    });
  };
  const [color, setColor] = useState("#fff");
  useFrame(() => {
    if (Math.abs(clickBox.current.rotation.y - rotationAngle) > 0.001) {
      clickBox.current.rotation.y +=
        (rotationAngle - clickBox.current.rotation.y) * 0.05; // Smoothly rotate to the desired angle
    }
  });
  // useEffect(() => {
  //   startRotation(-1);
  // }, []);
  return (
    <>
      <group {...props} dispose={null} ref={clickBox}>
        <threeMotion.mesh
          name={props.name}
          whileHover={{ scale: 1.1 }}
          whileTap={{ scale: 0.9 }}
          geometry={nodes.Cube.geometry}
          material={materials.Material}
          metalness={0.5}
          roughness={0.5}
          envMapIntensity={4}
          toneMapped={false}
          fog={false}
        >
          <meshStandardMaterial emissive={color} color={color} />
        </threeMotion.mesh>
      </group>
      {props.active == props.name ? (
        <BoxUI
          onPointerOver={(e) => {
            e.stopPropagation();
          }}
          cubes={props.cubes}
          setColor={setColor}
          setCubes={props.setCubes}
          clickBox={clickBox.current}
          startRotation={startRotation}
        ></BoxUI>
      ) : (
        ""
      )}
    </>
  );
}

useGLTF.preload("models/clickbox/clickbox001blend-transformed.glb");
